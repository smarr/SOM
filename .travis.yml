dist: xenial
sudo: false

jobs:
  include:
    - language: cpp
      addons: {apt: {packages: [cmake, libcppunit-dev]}}
      name: SOM++
      env: REPO=SOMpp.git       BUILD="cmake . && make SOM++" SOM=./som.sh

    - language: c
      name: CSOM
      env: REPO=CSOM.git        BUILD=make    SOM=./som.sh COMPILER=gcc ARCH=64bit

    # JsSOM can't currently be parameterized with another core lib, so, we can't really test it
    # - language: node_js
    #   env: SOM=JsSOM       REPO=JsSOM.git       BUILD=make    SOM=./som.sh

    # PySOM isn't maintained. I should make sure that RPySOM works without RPython though
    # - language: python
    #   name: PySOM
    #   env: REPO=PySOM.git       BUILD=""      SOM=./som.sh  PYTHON=python
    #   python:
    #     - "2.7"

    - language: python
      name: RPySOM
      env: REPO=RPySOM.git      BUILD=""      SOM=./som.sh  PYTHON=python SOM_INTERP=BC
      python:
        - "2.7"
      before_script:
        - |
          cd som-vm
          travis_retry wget https://downloads.python.org/pypy/pypy2.7-v7.3.1-src.tar.bz2
          tar -xjf pypy2.7-v7.3.1-src.tar.bz2
          mv pypy2.7-v7.3.1-src pypy
          cd ..

    - language: java
      name: SOM (Java)
      dist: trusty
      env: REPO=som-java.git    BUILD=make    SOM=./som.sh
      jdk: [oraclejdk8]
      addons: {apt: {packages: [libc6-dev-i386]}}

    - language: java
      name: TruffleSOM
      dist: trusty
      env: REPO=TruffleSOM.git  BUILD="ant jar"    SOM="./som -G"
      jdk: [oraclejdk8]
      addons: {apt: {packages: [libc6-dev-i386]}}

    - language: java
      name: Specification Tests
      dist: trusty
      env: SOM=spec
      jdk: [oraclejdk8]
    
    - language: rust
      name: SOM-RS
      dist: bionic
      rust: [stable]
      env: REPO=som-rs.git  BUILD="cargo build --release -p som-interpreter-bc"  SOM=./target/release/som-interpreter-bc SOM_TESTS=" -c ../Smalltalk ../TestSuite -- TestHarness"
    
    - language: rust
      name: ykSOM
      dist: bionic
      rust: [nightly]
      env: REPO=yksom.git  BUILD="cargo build"  SOM="cargo run -- " SOM_TESTS="--cp ../Smalltalk ../TestSuite/TestHarness.som"
      

  allow_failures:
    # - env: SOM=JsSOM       REPO=JsSOM.git       BUILD=make    SOM=./som.sh
    - env: SOM=PySOM       REPO=PySOM.git       BUILD=""      SOM=./som.sh  PYTHON=python
    - env: SOM=RPySOM      REPO=RPySOM.git      BUILD=""      SOM=./som.sh  PYTHON=python

install:
  - |
    # Install Dependencies and Load SOM VM
    if [ "$SOM" != "spec" ]
    then
      pip install -q pyyaml

      if [ "$TRAVIS_PULL_REQUEST" = "false" ]
      then
        export BRANCH_NAME=$TRAVIS_BRANCH
        export GITHUB_USER=`echo $TRAVIS_REPO_SLUG | cut -d/ -f1`
      else
        export BRANCH_NAME=$TRAVIS_PULL_REQUEST_BRANCH
        export GITHUB_USER=`echo $TRAVIS_PULL_REQUEST_SLUG | cut -d/ -f1`
        export PR_TARGET_USER=`echo $TRAVIS_REPO_SLUG | cut -d/ -f1`
      fi
      echo "Get https://github.com/$GITHUB_USER/$REPO at branch $BRANCH_NAME for testing"
      git clone --branch $BRANCH_NAME --depth 1 https://github.com/$GITHUB_USER/$REPO som-vm || git clone --depth 1 https://github.com/$GITHUB_USER/$REPO som-vm || git clone --depth 1 https://github.com/$PR_TARGET_USER/$REPO som-vm
    fi

# command to run tests
script:
  - |
    set -e
    if [ "$SOM" = "spec" ]
    then
      cd specification
      make test
    else
      ./TestSuite/BasicInterpreterTests/number-of-tests.sh
      export ST_DIR=`pwd`/Smalltalk
      cd som-vm
      git --no-pager log -n 1
      
      echo Build $REPO
      eval $BUILD
      
      echo Run Tests
      if [ "$SOM_TESTS" == "" ]
      then
        export SOM_TESTS="-cp ../Smalltalk ../TestSuite/TestHarness.som"
      fi
      
      echo "$SOM $SOM_TESTS"
      eval "$SOM $SOM_TESTS"
    fi
